[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://j2yoof5fi55g"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_fu2bd"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y6ita"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_e46dv"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_v8js0"]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_rwd5p"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cs303"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_mxk6v"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_88syg"]
parameter_name = "DissolveValue"
hint = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_htgjy"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_k6tbx"]
input_name = "texture"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise;
uniform float DissolveValue : hint_range(0, 1);



void fragment() {
// Input:11
	vec2 n_out11p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise, n_out11p0);


// FloatParameter:7
	float n_out7p0 = DissolveValue;


// FloatConstant:5
	float n_out5p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 1.000000;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out7p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out3p0.x < n_out7p0)
	{
		n_out4p0 = vec3(n_out6p0);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0);
	}


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(TEXTURE, UV);
	float n_out8p4 = n_out8p0.a;


// Mix:10
	float n_in10p0 = 0.00000;
	float n_out10p0 = mix(n_in10p0, n_out4p0.x, n_out8p4);


// Output:0
	COLOR.a = n_out10p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1120, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_e46dv")
nodes/fragment/2/position = Vector2(20, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_v8js0")
nodes/fragment/3/position = Vector2(360, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_rwd5p")
nodes/fragment/4/position = Vector2(600, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_cs303")
nodes/fragment/5/position = Vector2(380, 400)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_mxk6v")
nodes/fragment/6/position = Vector2(440, 480)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_88syg")
nodes/fragment/7/position = Vector2(0, 400)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_htgjy")
nodes/fragment/8/position = Vector2(400, 620)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_k6tbx")
nodes/fragment/9/position = Vector2(60, 700)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_fu2bd")
nodes/fragment/10/position = Vector2(840, 460)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_y6ita")
nodes/fragment/11/position = Vector2(40, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 5, 0, 4, 4, 6, 0, 4, 5, 7, 0, 4, 1, 9, 0, 8, 2, 4, 0, 10, 1, 8, 4, 10, 2, 10, 0, 0, 1, 11, 0, 3, 0)
